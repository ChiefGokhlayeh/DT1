-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2004 Altera Corporation
-- Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
-- support information,  device programming or simulation file,  and any other
-- associated  documentation or information  provided by  Altera  or a partner
-- under  Altera's   Megafunction   Partnership   Program  may  be  used  only
-- to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
-- other  use  of such  megafunction  design,  netlist,  support  information,
-- device programming or simulation file,  or any other  related documentation
-- or information  is prohibited  for  any  other purpose,  including, but not
-- limited to  modification,  reverse engineering,  de-compiling, or use  with
-- any other  silicon devices,  unless such use is  explicitly  licensed under
-- a separate agreement with  Altera  or a megafunction partner.  Title to the
-- intellectual property,  including patents,  copyrights,  trademarks,  trade
-- secrets,  or maskworks,  embodied in any such megafunction design, netlist,
-- support  information,  device programming or simulation file,  or any other
-- related documentation or information provided by  Altera  or a megafunction
-- partner, remains with Altera, the megafunction partner, or their respective
-- licensors. No other licenses, including any licenses needed under any third
-- party's intellectual property, are provided herein.


-- Generated by Quartus II Version 4.2 (Build Build 157 12/07/2004)
-- Created on Sat Mar 12 07:16:42 2005

LIBRARY ieee;
USE ieee.std_logic_1164.all;


--  Entity Declaration


--  Digitaltechnik 2
--  (c) 2007 R.Keller, W.Lindermeir, W.Zimmermann
--  Hochschule Esslingen
--  Letzte Aenderung: W. Lindermeir, 11/07

ENTITY result_checker IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		ALU_result : IN STD_LOGIC_VECTOR(7 downto 0);
		ALU_exp_result : IN STD_LOGIC_VECTOR(7 downto 0);
		reset_n : IN STD_LOGIC;
		clk : IN STD_LOGIC;
		ALU_exp_cozn : IN STD_LOGIC_VECTOR(3 downto 0);
		ALU_cozn : IN STD_LOGIC_VECTOR(3 downto 0);
		result_history_ok_n : OUT STD_LOGIC;
		result_ok_n : OUT STD_LOGIC
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END result_checker;


--  Architecture Body

ARCHITECTURE result_checker_architecture OF result_checker IS

signal current_result_ok : std_logic;
signal hist_ok : std_logic;
	
BEGIN

result_ok_n         <= not current_result_ok;	
result_history_ok_n <= not hist_ok;


checker: 
process (clk, reset_n) is
begin
  if reset_n = '0' then
    -- reset condition
    current_result_ok <= '1';
  elsif rising_edge(clk) then
    if ALU_result = ALU_exp_result and ALU_cozn = ALU_exp_cozn then
      current_result_ok <= '1';
    else
      current_result_ok <= '0';
    end if;
  end if;
end process checker;

hist_checker: 
process(clk, reset_n) is
begin
  if reset_n = '0' then
    -- reset condition
    hist_ok <= '1';
  elsif rising_edge(clk) then
    if hist_ok /= '1' or current_result_ok /= '1' then
      hist_ok <= '0';
    else
      hist_ok <= '1';
    end if;
  end if;
end process hist_checker;

END result_checker_architecture;






